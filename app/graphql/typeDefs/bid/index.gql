interface ProjectBidInterface {
  id: String!
  userId: String!
  companyId: String!
  projectId: String!
  status: BidStatus!
  createdAt: Date!
  updatedAt: Date!
}

type PermissionedProjectBid implements ProjectBidInterface {
  id: String!
  userId: String!
  projectId: String!
  companyId: String!
  components: [ProjectBidComponent!]!
  permission: ProjectPermission!
  status: BidStatus!
  remarkFile: BidRemark
  createdAt: Date!
  updatedAt: Date!
}

type BidRemark implements FileInterface {
  fileId: String!
  filename: String!
  url: String!
}

type ProjectBid implements ProjectBidInterface {
  id: String!
  userId: String!
  companyId: String!
  projectId: String!
  components: [ProjectBidComponent!]!
  status: BidStatus!
  remarkFile: BidRemark
  createdAt: Date!
  updatedAt: Date!
}

type ProjectBidForPo {
  projectBidId: String!
  companyId: String!
  companyName: String!
}

type ProjectBidComponent {
  id: String!
  projectBidId: String!
  projectComponentId: String!
  quantityPrices: [QuantityPrice!]!
  samplingFee: String!
  toolingFee: String
}

type QuantityPrice {
  quantity: Int!
  price: String!
}

enum BidStatus {
  OPEN
  ACCEPTED
  PO_ISSUED
  PO_ACCEPTED
  INVOICE_ISSUED
  INVOICE_ACCEPTED
  REJECTED
  OUTDATED
  EXPIRED
}

enum BidIntentStatus {
  EXPRESSED_INTENT
  ACCEPTED
  REJECTED
}
