type PurchaseOrder implements FileInterface {
  fileId: String!
  filename: String!
  url: String!
  status: PurchaseOrderStatus!
}

enum PurchaseOrderStatus {
  OPEN
  OUTDATED
  VOID
  ACCEPTED
  REJECTED
}
type CustomerOverview {
  id: String!
  name: String!
  contactEmail: String!
  logo: String
  country: String!
  isVerified: Boolean!
}

type CustomerProjectOverview {
  id: String!
  userId: String!
  name: String!
  category: String!
  totalWeight: String!
  deliveryDate: String!
  deliveryAddress: String!
  targetPrice: String!
  orderQuantities: [Int!]!
  status: String!
  permission: ProjectPermission!
  createdAt: Date!
  updatedAt: Date!
}

# to be augmented later when customer have more attributes
type CustomerDetail {
  id: String!
  name: String!
  contactEmail: String!
  phone: String!
  logo: String
  country: String!
  isActive: Boolean!
  companyUrl: String
  fax: String
  isVerified: Boolean!
}

type CustomerProject implements ProjectInterface {
  id: String!
  userId: String!
  companyId: String!
  creationMode: ProjectCreationMode!
  companyName: String!
  name: String!
  category: String!
  totalWeight: String!
  deliveryDate: String!
  deliveryAddress: String!
  targetPrice: String!
  orderQuantities: [Int!]!
  status: ProjectStatus!
  permission: ProjectPermission!
  components: [ProjectComponent!]!
  bids: [ProjectBid!]
  createdAt: Date!
  updatedAt: Date!
}

type CustomerPoProjectInfo {
  projectId: String!
  projectName: String!
}

type PoDetailVendorInfo {
  companyId: String!
  companyName: String!
}

type CustomerPoDetail {
  projectBidId: String!
  vendorInfo: PoDetailVendorInfo!
  poFile: PurchaseOrder!
  invoiceFile: Invoice
}

type CustomerPo {
  projectInfo: CustomerPoProjectInfo!
  poDetails: [CustomerPoDetail!]!
  permission: ProjectPermission!
}
