input ProductDimensionInput {
  x: String!
  y: String!
  z: String
}

input PostProcessPrintingNumberOfColorsInput {
  c: String!
  t: String!
}

input PostProcessDetailInput {
  postProcessName: String!
  isInside: Boolean
  printingMethod: String
  numberOfColors: PostProcessPrintingNumberOfColorsInput
  color: String
  estimatedArea: ProductDimensionInput
  fontSize: String
}

input CreateProjectComponentSpecInput {
  productName: String!
  dimension: ProductDimensionInput!
  style: String
  boxStyle: String
  includeArtworkInQuote: Boolean

  # unique attribute for booklet
  numberOfPages: String

  # unique attribute for sticker
  purpose: String
  shape: String

  # unique attribute for corrugate
  flute: String
  # unique attribute for molded fiber
  manufacturingProcess: String

  # common attributes for products that do not have inside/outside difference
  thickness: String
  color: String
  material: String
  materialSource: String
  postProcess: [PostProcessDetailInput!]
  finish: String

  # common attributes for products that have inside/outside difference
  outsideColor: String
  outsideMaterial: String
  outsideMaterialSource: String
  outsideFinish: String

  insideColor: String
  insideMaterial: String
  insideMaterialSource: String
  insideFinish: String
}

input CreateProjectComponentInput {
  # projectId could be null if used as part of CreateProjectInput
  # if called directly then we will have projectId defined
  projectId: String
  name: String!
  designIds: [String!]
  componentSpec: CreateProjectComponentSpecInput!
}

input CreateProjectInput {
  userId: String!
  creationMode: ProjectCreationMode!
  name: String!
  category: String!
  totalWeight: String!
  deliveryDate: String!
  deliveryAddress: String!
  country: String!
  targetPrice: String!
  orderQuantities: [Int!]!
  components: [CreateProjectComponentInput!]!
}

input CreateGuestProjectInput {
  projectId: String!
  creationMode: ProjectCreationMode!
  name: String!
  category: String!
  totalWeight: String!
  deliveryDate: String!
  deliveryAddress: String!
  country: String!
  targetPrice: String!
  orderQuantities: [Int!]!
  components: [CreateProjectComponentInput!]!
}

type Mutation {
  createProject(data: CreateProjectInput!): Boolean!
  # createProjectComponents(data: [CreateProjectComponentInput!]!): Boolean!
  createGuestProject(data: CreateGuestProjectInput!): Boolean!
}
